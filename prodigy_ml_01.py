# -*- coding: utf-8 -*-
"""Prodigy_ML_01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fezcMNQxzOI4l5zvrevAsLCJRwAvDFf_
"""

#import necessary Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
df=pd.read_csv('/content/House Price India.csv')
df

df.shape

# Statistical Analysis
df.describe()

df.info()

df.isnull().any()

plt.scatter(df['living area'],df['Price'],color="black")
plt.xlabel('price in (\u20B9)')
plt.ylabel('(living area in sqft)')
plt.title('Price vs Living area')
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

X = df[["living area", "number of bedrooms", "number of bathrooms"]]
y = df["Price"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print("Mean squared error:", mse)
print("R-squared:", r2)

new_data = {"living area": [1000, 2000, 9000],
            "number of bedrooms": [3, 4, 5],
            "number of bathrooms": [2, 2, 3]}
new_df = pd.DataFrame(new_data)
predicted_prices = model.predict(new_df)

# Round predicted prices to nearest integer
rounded_prices = [int(price) for price in predicted_prices]

# Print predicted prices in rupees without decimals
print("Predicted prices \u20B9", rounded_prices)
